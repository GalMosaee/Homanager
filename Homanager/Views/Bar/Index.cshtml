@model IEnumerable<Homanager.ViewModels.UsersGroupCountModel>
@{
    ViewData["Title"] = "Index";
}

<h2>@User.Identity.Name Groups Statistics</h2>


<div class="stat-chart">
    <div class="bar"></div>
    <div>
        <a asp-controller="Home" asp-action="Stats" class="btn btn-default">Back to Stats</a>
    </div>
</div>


<script src="https://d3js.org/d3.v4.min.js"></script>
<script>

   

function drawBar(jsonData) {
    var margin = { top: 20, right: 20, bottom: 30, left: 40 },
        width = 400 - margin.left - margin.right,
        height = 500 - margin.top - margin.bottom;

    // set the ranges
    var x = d3.scaleBand()
        .range([0, width])
        .padding(0.1);
    var y = d3.scaleLinear()
        .range([height, 0]);

    // get some color in
    var color = d3.schemeCategory20;

    // append the svg object to the body of the page
    // append a 'group' element to 'svg'
    // moves the 'group' element to the top left margin
    var svg = d3.select(".bar").append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
        .append("g")
        .attr("transform",
            "translate(" + margin.left + "," + margin.top + ")");
    // Scale the range of the data in the domains
    x.domain(jsonData.map(function (d) { return d.groupOpenMonth; }));
    y.domain([0, d3.max(jsonData, function (d) { return d.groupsCount; })]);

    // append the rectangles for the bar chart
    var bars = svg.selectAll(".bar")
        .data(jsonData)
        .enter().append("rect")
        .attr("class", "bar")
        .attr("x", function (d) { return x(d.groupOpenMonth); })
        .attr("width", x.bandwidth())
        .attr("y", function (d) { return y(d.groupsCount); })
        .attr("height", function (d) { return height - y(d.groupsCount); })
        .attr('fill', function (d, i) { return color[i]; });

    // add the x Axis
    svg.append("g")
        .attr("transform", "translate(0," + height + ")")
        .call(d3.axisBottom(x));

    // add the y Axis
    svg.append("g")
        .call(d3.axisLeft(y))
        .append("text")
        .attr("transform", "rotate(-90)")
        .attr("y", 6)
        .attr("dy", "-35px")
        .text("Malfunctions");
}


     var monthCount = @Html.Raw(Json.Serialize(Model));
    drawBar(monthCount);
    


</script>
